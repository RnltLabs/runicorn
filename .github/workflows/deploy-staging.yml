name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/runicorn:staging
          VITE_GRAPHHOPPER_API_KEY=${{ secrets.VITE_GRAPHHOPPER_API_KEY }}
        cache-to: type=inline

    - name: Deploy to Staging Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/runicorn:staging
          docker stop runicorn-staging || true
          docker rm runicorn-staging || true
          docker run -d -p 3003:3002 --name runicorn-staging ${{ secrets.DOCKER_USERNAME }}/runicorn:staging
          docker image prune -f

    - name: Verify deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sleep 5
          if docker ps | grep -q runicorn-staging; then
            echo "‚úÖ Staging deployment successful"
          else
            echo "‚ùå Staging deployment failed"
            exit 1
          fi

    - name: Notify Discord on Success
      if: success()
      run: |
        curl -X POST "${{ secrets.DISCORD_WEBHOOK_RUNICORN_STAGING }}" \
          -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "üß™ Staging Deployment Successful",
              "description": "Runicorn deployed to staging environment",
              "color": 16776960,
              "fields": [
                {
                  "name": "Environment",
                  "value": "Staging",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "${{ github.ref_name }}",
                  "inline": true
                },
                {
                  "name": "URL",
                  "value": "[Open App](https://staging.runicorn.io/)",
                  "inline": false
                },
                {
                  "name": "Commit",
                  "value": "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})",
                  "inline": false
                }
              ],
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
            }]
          }'

    - name: Notify Discord on Failure
      if: failure()
      run: |
        curl -X POST "${{ secrets.DISCORD_WEBHOOK_RUNICORN_ERRORS }}" \
          -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "‚ùå Staging Deployment Failed",
              "description": "Runicorn staging deployment encountered an error",
              "color": 15158332,
              "fields": [
                {
                  "name": "Environment",
                  "value": "Staging",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "${{ github.ref_name }}",
                  "inline": true
                },
                {
                  "name": "Commit",
                  "value": "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})",
                  "inline": false
                },
                {
                  "name": "Workflow Run",
                  "value": "[View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                  "inline": false
                }
              ],
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
            }]
          }'
