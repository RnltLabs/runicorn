name: Auto Version Bump (PR Label)

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine version bump from labels
        id: bump
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name);

            if (labels.includes('release:major')) {
              return 'major';
            } else if (labels.includes('release:minor')) {
              return 'minor';
            } else if (labels.includes('release:patch')) {
              return 'patch';
            }
            return 'none';
          result-encoding: string

      - name: Bump version
        if: steps.bump.outputs.result != 'none'
        run: |
          BUMP_TYPE="${{ steps.bump.outputs.result }}"
          npm version $BUMP_TYPE -m "chore(release): Release v%s [skip ci]"

          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          git push --follow-tags

      - name: Create GitHub Release
        if: steps.bump.outputs.result != 'none'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          release_name: Release v${{ steps.bump.outputs.new_version }}
          body: |
            ## Release Notes

            ${{ github.event.pull_request.body }}

            **PR**: #${{ github.event.pull_request.number }}
            **Author**: @${{ github.event.pull_request.user.login }}
          draft: false
          prerelease: false
